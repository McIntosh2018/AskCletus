// <auto-generated />
using System;
using AskCletus_BackEnd.Services;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AskCletus_BackEnd.Migrations
{
    [DbContext(typeof(DrinkContext))]
    partial class DrinkContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.16")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AskCletus_BackEnd.Services.DALModels.DrinkHistory", b =>
                {
                    b.Property<int>("HistoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("DrinkName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("HistoryId");

                    b.ToTable("DrinkHistories");
                });

            modelBuilder.Entity("AskCletus_BackEnd.Services.DALModels.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("AskCletus_BackEnd.Services.DALModels.UserBar", b =>
                {
                    b.Property<int>("BarId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("strIngredient1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("strIngredient10")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("strIngredient11")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("strIngredient12")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("strIngredient13")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("strIngredient14")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("strIngredient15")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("strIngredient16")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("strIngredient17")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("strIngredient18")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("strIngredient19")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("strIngredient2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("strIngredient20")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("strIngredient21")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("strIngredient22")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("strIngredient23")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("strIngredient24")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("strIngredient25")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("strIngredient3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("strIngredient4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("strIngredient5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("strIngredient6")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("strIngredient7")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("strIngredient8")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("strIngredient9")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BarId");

                    b.ToTable("UserBars");
                });
#pragma warning restore 612, 618
        }
    }
}
